

https://www.geeksforgeeks.org/problems/union-of-two-sorted-arrays-1587115621/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=union-of-two-sorted-arrays



//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.lang.*;
import java.util.*;

class Main {
    public static void main(String args[]) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int t = Integer.parseInt(br.readLine().trim());
        while (t-- > 0) {
            // First array input
            String[] str1 = br.readLine().trim().split(
                " "); // Read the first line and split by spaces
            int n = str1.length;
            int[] a = new int[n];
            for (int i = 0; i < n; i++) {
                a[i] = Integer.parseInt(str1[i]); // Convert each element to an integer
            }

            // Second array input
            String[] str2 = br.readLine().trim().split(
                " "); // Read the second line and split by spaces
            int m = str2.length;
            int[] b = new int[m];
            for (int i = 0; i < m; i++) {
                b[i] = Integer.parseInt(str2[i]); // Convert each element to an integer
            }

            Solution obj = new Solution();
            ArrayList<Integer> res = new ArrayList<Integer>();
            res = obj.findUnion(a, b);
            for (int i = 0; i < res.size(); i++) System.out.print(res.get(i) + " ");
            System.out.println();

            System.out.println("~");
        }
    }
}

// } Driver Code Ends


// User function Template for Java

// a,b : the arrays
class Solution {
    // Function to return a list containing the union of the two arrays.
    public static ArrayList<Integer> findUnion(int a[], int b[]) {
        // add your code here
        // ArrayList<Integer> arr = new ArrayList<>();
        // HashSet<Integer> set = new HashSet<>();
        // int n = a.length;
        // int m = b.length;
        
        // for(int i=0; i<n; i++)
        // {
        //     set.add(a[i]);
        // }
        // for(int j=0; j<m; j++)
        // {
        //     set.add(b[j]);
        // }
        // for(Integer i:set)
        // {
        //     arr.add(i);
        // }
        //  Collections.sort(arr);
    
        // return arr;
        
        ArrayList<Integer> arr = new ArrayList<>();
        
        int n = a.length;
        int m = b.length;
        
        int i = 0;
        int j = 0;
        while(i<n && j<m)
        {
            if(a[i]<b[j])
            {
                if(i>0 && a[i]==a[i-1]){
                    i++;
                    continue;
                }
             arr.add(a[i]);
             i++;
                
            }
            else if(a[i]>b[j])
            {
                if(j>0 && b[j]==b[j-1]){
                    j++;
                    continue;
                }
                arr.add(b[j]);
                j++;
            }
            else{
                if(j>0 && b[j]==b[j-1] && i>0 && a[i]==a[i-1]){
                    i++;
                    j++;
                    continue;
                }
                arr.add(a[i]);
                i++;
                j++;
            }
        }
        
        while(i<n)
        {
            if(i>0 && a[i]==a[i-1]){
                i++;
                    continue;
                }
            arr.add(a[i]);
            i++;
        }
        while(j<m)
        {
            if(j>0 && b[j]==b[j-1]){
                j++;
                    continue;
                }
            arr.add(b[j]);
            j++;
        }
        
        return arr;
    }
}
